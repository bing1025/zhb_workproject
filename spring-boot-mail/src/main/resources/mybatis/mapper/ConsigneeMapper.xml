<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neo.mapper.ConsigneeMapper">
  <resultMap id="BaseResultMap" type="com.neo.bo.Consignee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mail_group" jdbcType="VARCHAR" property="mailGroup" />
    <result column="user_role" jdbcType="VARCHAR" property="userRole" />
    <result column="mail_addr" jdbcType="VARCHAR" property="mailAddr" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="is_enable" jdbcType="BIT" property="isEnable" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, mail_group, user_role, mail_addr, phone_num, is_enable, create_by, 
    update_by, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consignee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from consignee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.neo.bo.Consignee">
    insert into consignee (id, user_id, user_name, 
      mail_group, user_role, mail_addr, 
      phone_num, is_enable, create_by, 
      update_by, update_time, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{mailGroup,jdbcType=VARCHAR}, #{userRole,jdbcType=VARCHAR}, #{mailAddr,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{isEnable,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neo.bo.Consignee">
    insert into consignee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="mailGroup != null">
        mail_group,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="mailAddr != null">
        mail_addr,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mailGroup != null">
        #{mailGroup,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="mailAddr != null">
        #{mailAddr,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.bo.Consignee">
    update consignee
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mailGroup != null">
        mail_group = #{mailGroup,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="mailAddr != null">
        mail_addr = #{mailAddr,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.bo.Consignee">
    update consignee
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      mail_group = #{mailGroup,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=VARCHAR},
      mail_addr = #{mailAddr,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=BIT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
   <select id="findAll"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consignee
  </select>
  
    <select id="findConsigneeByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consignee
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByMailGroup" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consignee
    where mail_group = #{mailGroup,jdbcType=VARCHAR}
  </select>
  
  
</mapper>